@model IEnumerable<PlaceFinder.Models.Place>

@{
    ViewData["Title"] = "Search Places";
}

<h2>Search Places</h2>

<!-- Formulario -->
<form asp-action="Search" asp-controller="Places" method="get">
    <div class="form-group">
        <label for="query">Search Query</label>
        <input type="text" class="form-control" id="query" name="query" placeholder="e.g., Bakery" value="@ViewContext.HttpContext.Request.Query["query"]" />
    </div>
    <div class="form-group">
        <label for="location">Location</label>
        <input type="text" class="form-control" id="location" name="location" placeholder="e.g., New York" value="@ViewContext.HttpContext.Request.Query["location"]" />
    </div>
    <button type="submit" class="btn btn-primary mt-2">Search</button>
</form>

<!-- Mensajes -->
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <p class="text-warning mt-4">@ViewBag.Message</p>
}

@if (!string.IsNullOrEmpty(ViewBag.Error))
{
    <p class="text-danger mt-4">@ViewBag.Error</p>
}

<!-- Resultados -->
@if (Model != null && Model.Any())
{
    <div class="mt-4">
        <h3>Results</h3>
        <div class="row">
            @foreach (var place in Model)
            {
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@place.Name</h5>
                            <p class="card-text">@place.Categories?.FirstOrDefault()?.Name</p>
                            <p class="card-text text-muted">Distance: @place.Distance meters</p>
                            <p class="card-text text-muted">Timezone: @place.Timezone</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
